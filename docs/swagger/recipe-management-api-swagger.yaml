openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8090
    description: Generated server url
paths:
  /api/recipes/{recipeId}:
    get:
      tags:
        - recipe-resource
      operationId: getRecipeById
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Recipe'
    put:
      tags:
        - recipe-resource
      operationId: updateRecipe
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
    delete:
      tags:
        - recipe-resource
      operationId: updateRecipe_1
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/users/register:
    post:
      tags:
        - user-resource
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/users/login:
    post:
      tags:
        - user-resource
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/recipes:
    get:
      tags:
        - recipe-resource
      operationId: getAllRecipes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      tags:
        - recipe-resource
      operationId: createRecipe
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
components:
  schemas:
    Recipe:
      type: object
      properties:
        recipeId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        recipeName:
          type: string
        createdDateTime:
          type: string
        numberOfPeople:
          type: integer
          format: int32
        ingredients:
          type: string
        cookingInstructions:
          type: string
        vegetarian:
          type: boolean
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
